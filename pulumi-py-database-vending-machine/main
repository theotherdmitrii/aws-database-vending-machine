#!/usr/bin/env bash

# Creates aws stack to load s3 data into serverless Aurora cluster
# Copies test data from ./data/dummy.csv to newly created s3 bucket
# Runs replication task to loda CSV files into Aurora database
set -e

echo requires aws cls v1.17.5+

SCRIPT_LOG_FILE=./script.log
REPLICATION_TASK_ARN_PATTERN='replication_task_arn:\s\"\K([A-Za-z0-9:\-_]{30,})'
SOURCE_BUCKET_PATTERN='source_bucket_name:\s\K([A-Za-z0-9:\-_]{6,})'

echo Deploying replication stack
pulumi up -y &> ${SCRIPT_LOG_FILE}


replication_task_arn=$(grep -oP ${REPLICATION_TASK_ARN_PATTERN} ${SCRIPT_LOG_FILE})

source_bucket_name=$(grep -oP ${SOURCE_BUCKET_PATTERN} ${SCRIPT_LOG_FILE})


if [[ -z "$replication_task_arn" ]]; then
    echo script terminated, no ${REPLICATION_TASK_ARN_PATTERN} has been found
    exit 0
fi

filter="Name=replication-task-arn,Values=${replication_task_arn}"

echo copying dummy data to s3 bucket
aws s3 cp ./data/dummy.csv s3://${source_bucket_name}/nuage/dummydata/

echo starting replication task ${replication_task_arn}
aws dms start-replication-task --replication-task-arn ${replication_task_arn} --start-replication-task-type reload-target &>>${SCRIPT_LOG_FILE}

echo waiting replication task to complete...
aws dms wait replication-task-stopped --filters ${filter} &>>${SCRIPT_LOG_FILE}

echo replecation task stopped with $(aws dms describe-replication-tasks --filters ${filter} | jq ."ReplicationTasks[].StopReason")
